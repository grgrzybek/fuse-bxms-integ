<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" 
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
           xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:kie="http://drools.org/schema/kie-aries-blueprint/1.0.0"
           xsi:schemaLocation="
          http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
          http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
          http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
          http://drools.org/schema/kie-aries-blueprint/1.0.0 http://drools.org/schema/kie-aries-blueprint/1.0.0">
    
    <cm:property-placeholder persistent-id="org.drools.example.kie" update-strategy="reload" xmlns="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0">
        <cm:default-properties>
            <cm:property name="activeMQ.uri" value="tcp://localhost:61616" />
            <cm:property name="activeMQ.username" value="admin" />
            <cm:property name="activeMQ.password" value="admin" />
            <cm:property name="activeMQ.concurrentConsumers" value="100" />
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Beans used by camel in the example -->
    <bean id="droolsHelper" class="org.drools.camel.example.DroolsCommandHelper"/>
    <bean id="personHelper" class="org.drools.camel.example.PersonHelper">
        <property name="activeMQURI" value="${activeMQ.uri}" />
    </bean>
    <bean id="cheeseHelper" class="org.drools.camel.example.CheeseHelper"/>

    <!-- Camel Route -->
    <camelContext xmlns="http://camel.apache.org/schema/blueprint">

        <route trace="false" id="testRoute">
            <description>Example route that will regularly create a Person with a random age and verify their age
            </description>
            <from uri="timer:testRoute?period=10s"/>
            <bean method="createTestPerson" ref="personHelper"/>
            <bean method="logProperties" ref="personHelper"/>
            <to uri="kie:ksession1?action=insertBody" id="AgeVerification"/>
            <choice>
                <when id="CanDrink">
                    <simple>${body.canDrink}</simple>
                    <log logName="Bar" message="Person ${body.name} can go to the bar"/>
                    <!--<log logName="Bar" message="activeMQ.uri ${activeMQ.uri}"/>-->
                </when>
                <otherwise>
                    <log logName="Home" message="Person ${body.name} is staying home"/>
                    <!--<log logName="Home" message="activeMQ.uri ${activeMQ.uri}"/>-->
                </otherwise>
            </choice>
        </route>

        <route trace="false" id="ruleOnBody">
            <description>This route shows an example of passing (inserting) the Body of the message as a POJO to Drools
                for execution
            </description>
            <from uri="direct://ruleOnBody"/>
            <to uri="kie:ksession1?action=insertBody"/>
        </route>

        <route trace="false" id="ruleOnCommand">
            <description>This route shows an example of creating a Drools Command wrapping the Body of the message with
                the help of the custom DroolsCommandHelperBean (included in this project), and passing this Drools
                Command to the ruleset for execution.
            </description>
            <from uri="direct://ruleOnCommand"/>
            <bean method="insertAndFireAll" ref="droolsHelper"/>
            <to uri="kie:ksession1?action=execute"/>
        </route>

        <!-- Decision Table Routes -->
        <route trace="false" id="testRouteDecisionTable">
            <from uri="timer:testRouteDecisionTable?period=10s"/>
            <bean method="createTestCheese" ref="cheeseHelper"/>
            <to uri="kie:ksession-dt-1?action=insertBody" id="CheeseCost"/>
            <choice>
                <when id="CheeseType">
                    <simple>${body.type}</simple>
                    <log logName="Chilton" message="Cheese ${body.type} costs ${body.price} EUR."/>
                </when>
                <otherwise>
                    <log logName="Cheddar" message="Cheese ${body.type} costs ${body.price} EUR."/>
                </otherwise>
            </choice>
        </route>

        <route trace="false" id="ruleOnBodyDT">
            <from uri="direct://ruleOnBodyDT"/>
            <to uri="kie:ksession-dt-1?action=insertBody"/>
        </route>

        <route trace="false" id="ruleOnCommandDT">
            <from uri="direct://ruleOnCommandDT"/>
            <bean method="insertAndFireAll" ref="droolsHelper"/>
            <to uri="kie:ksession-dt-1?action=execute"/>
        </route>
    </camelContext>


</blueprint>
